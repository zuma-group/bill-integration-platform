// TODO: PostgreSQL Database Schema
// This file is prepared for future implementation with PostgreSQL
// Currently, the application uses localStorage for data persistence

// To enable PostgreSQL:
// 1. Set up a PostgreSQL database
// 2. Update the DATABASE_URL in .env
// 3. Run: npx prisma generate
// 4. Run: npx prisma db push
// 5. Replace localStorage calls with Prisma client calls

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Invoice {
  id            String      @id @default(cuid())
  invoiceNumber String
  invoiceDate   DateTime
  dueDate       DateTime
  vendor        Json        // Stores vendor object
  customer      Json        // Stores customer object
  subtotal      Float
  taxAmount     Float
  total         Float
  currency      String      @default("USD")
  paymentTerms  String
  status        InvoiceStatus @default(EXTRACTED)
  extractedAt   DateTime    @default(now())
  syncedAt      DateTime?
  batchId       String?
  batch         Batch?      @relation(fields: [batchId], references: [id])
  lineItems     LineItem[]
  odooRecord    OdooRecord?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([status])
  @@index([batchId])
}

model LineItem {
  id          String   @id @default(cuid())
  description String
  quantity    Float
  unitPrice   Float
  amount      Float
  tax         Float
  invoiceId   String
  invoice     Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())

  @@index([invoiceId])
}

model Batch {
  id         String    @id @default(cuid())
  invoices   Invoice[]
  totalValue Float
  createdAt  DateTime  @default(now())
}

model OdooRecord {
  id               String   @id @default(cuid())
  moveType         String   @default("in_invoice")
  partnerId        String
  invoiceDate      DateTime
  invoiceDateDue   DateTime
  ref              String
  amountTotal      Float
  state            OdooState @default(DRAFT)
  invoiceId        String   @unique
  invoice          Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([state])
  @@index([invoiceId])
}

enum InvoiceStatus {
  EXTRACTED
  SYNCED
}

enum OdooState {
  DRAFT
  POSTED
  CANCEL
}